// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteReader is a Reader for the Delete structure.
type DeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteOK creates a DeleteOK with default headers values
func NewDeleteOK() *DeleteOK {
	return &DeleteOK{}
}

/* DeleteOK describes a response with status code 200, with default header values.

Delete Instance succeeded
*/
type DeleteOK struct {
	Payload interface{}
}

func (o *DeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /instances/{name}][%d] deleteOK  %+v", 200, o.Payload)
}
func (o *DeleteOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBadRequest creates a DeleteBadRequest with default headers values
func NewDeleteBadRequest() *DeleteBadRequest {
	return &DeleteBadRequest{}
}

/* DeleteBadRequest describes a response with status code 400, with default header values.

DeleteBadRequest delete bad request
*/
type DeleteBadRequest struct {
	Payload *DeleteBadRequestBody
}

func (o *DeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /instances/{name}][%d] deleteBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteBadRequest) GetPayload() *DeleteBadRequestBody {
	return o.Payload
}

func (o *DeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnauthorized creates a DeleteUnauthorized with default headers values
func NewDeleteUnauthorized() *DeleteUnauthorized {
	return &DeleteUnauthorized{}
}

/* DeleteUnauthorized describes a response with status code 401, with default header values.

DeleteUnauthorized delete unauthorized
*/
type DeleteUnauthorized struct {
	Payload interface{}
}

func (o *DeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /instances/{name}][%d] deleteUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForbidden creates a DeleteForbidden with default headers values
func NewDeleteForbidden() *DeleteForbidden {
	return &DeleteForbidden{}
}

/* DeleteForbidden describes a response with status code 403, with default header values.

DeleteForbidden delete forbidden
*/
type DeleteForbidden struct {
	Payload *DeleteForbiddenBody
}

func (o *DeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /instances/{name}][%d] deleteForbidden  %+v", 403, o.Payload)
}
func (o *DeleteForbidden) GetPayload() *DeleteForbiddenBody {
	return o.Payload
}

func (o *DeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotFound creates a DeleteNotFound with default headers values
func NewDeleteNotFound() *DeleteNotFound {
	return &DeleteNotFound{}
}

/* DeleteNotFound describes a response with status code 404, with default header values.

DeleteNotFound delete not found
*/
type DeleteNotFound struct {
	Payload *DeleteNotFoundBody
}

func (o *DeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /instances/{name}][%d] deleteNotFound  %+v", 404, o.Payload)
}
func (o *DeleteNotFound) GetPayload() *DeleteNotFoundBody {
	return o.Payload
}

func (o *DeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInternalServerError creates a DeleteInternalServerError with default headers values
func NewDeleteInternalServerError() *DeleteInternalServerError {
	return &DeleteInternalServerError{}
}

/* DeleteInternalServerError describes a response with status code 500, with default header values.

DeleteInternalServerError delete internal server error
*/
type DeleteInternalServerError struct {
	Payload interface{}
}

func (o *DeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /instances/{name}][%d] deleteInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteBadRequestBody delete bad request body
swagger:model DeleteBadRequestBody
*/
type DeleteBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete bad request body
func (o *DeleteBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this delete bad request body based on context it is used
func (o *DeleteBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteForbiddenBody delete forbidden body
swagger:model DeleteForbiddenBody
*/
type DeleteForbiddenBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete forbidden body
func (o *DeleteForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteForbiddenBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteForbidden"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this delete forbidden body based on context it is used
func (o *DeleteForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteNotFoundBody delete not found body
swagger:model DeleteNotFoundBody
*/
type DeleteNotFoundBody struct {

	// error
	// Required: true
	Error *string `json:"error"`

	// status
	// Required: true
	Status *string `json:"status"`
}

// Validate validates this delete not found body
func (o *DeleteNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("deleteNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

func (o *DeleteNotFoundBody) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("deleteNotFound"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this delete not found body based on context it is used
func (o *DeleteNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
