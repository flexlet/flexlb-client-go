// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/flexlet/flexlb-client-go/models"
)

// CreateReader is a Reader for the Create structure.
type CreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOK creates a CreateOK with default headers values
func NewCreateOK() *CreateOK {
	return &CreateOK{}
}

/* CreateOK describes a response with status code 200, with default header values.

Create Instance succeeded
*/
type CreateOK struct {
	Payload *models.Instance
}

func (o *CreateOK) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createOK  %+v", 200, o.Payload)
}
func (o *CreateOK) GetPayload() *models.Instance {
	return o.Payload
}

func (o *CreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Instance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBadRequest creates a CreateBadRequest with default headers values
func NewCreateBadRequest() *CreateBadRequest {
	return &CreateBadRequest{}
}

/* CreateBadRequest describes a response with status code 400, with default header values.

CreateBadRequest create bad request
*/
type CreateBadRequest struct {
	Payload *CreateBadRequestBody
}

func (o *CreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createBadRequest  %+v", 400, o.Payload)
}
func (o *CreateBadRequest) GetPayload() *CreateBadRequestBody {
	return o.Payload
}

func (o *CreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnauthorized creates a CreateUnauthorized with default headers values
func NewCreateUnauthorized() *CreateUnauthorized {
	return &CreateUnauthorized{}
}

/* CreateUnauthorized describes a response with status code 401, with default header values.

CreateUnauthorized create unauthorized
*/
type CreateUnauthorized struct {
	Payload interface{}
}

func (o *CreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateForbidden creates a CreateForbidden with default headers values
func NewCreateForbidden() *CreateForbidden {
	return &CreateForbidden{}
}

/* CreateForbidden describes a response with status code 403, with default header values.

CreateForbidden create forbidden
*/
type CreateForbidden struct {
	Payload *CreateForbiddenBody
}

func (o *CreateForbidden) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createForbidden  %+v", 403, o.Payload)
}
func (o *CreateForbidden) GetPayload() *CreateForbiddenBody {
	return o.Payload
}

func (o *CreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNotFound creates a CreateNotFound with default headers values
func NewCreateNotFound() *CreateNotFound {
	return &CreateNotFound{}
}

/* CreateNotFound describes a response with status code 404, with default header values.

CreateNotFound create not found
*/
type CreateNotFound struct {
	Payload *CreateNotFoundBody
}

func (o *CreateNotFound) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createNotFound  %+v", 404, o.Payload)
}
func (o *CreateNotFound) GetPayload() *CreateNotFoundBody {
	return o.Payload
}

func (o *CreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternalServerError creates a CreateInternalServerError with default headers values
func NewCreateInternalServerError() *CreateInternalServerError {
	return &CreateInternalServerError{}
}

/* CreateInternalServerError describes a response with status code 500, with default header values.

CreateInternalServerError create internal server error
*/
type CreateInternalServerError struct {
	Payload interface{}
}

func (o *CreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /instances][%d] createInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateBadRequestBody create bad request body
swagger:model CreateBadRequestBody
*/
type CreateBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this create bad request body
func (o *CreateBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("createBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create bad request body based on context it is used
func (o *CreateBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateForbiddenBody create forbidden body
swagger:model CreateForbiddenBody
*/
type CreateForbiddenBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this create forbidden body
func (o *CreateForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateForbiddenBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("createForbidden"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create forbidden body based on context it is used
func (o *CreateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CreateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNotFoundBody create not found body
swagger:model CreateNotFoundBody
*/
type CreateNotFoundBody struct {

	// error
	// Required: true
	Error *string `json:"error"`

	// status
	// Required: true
	Status *string `json:"status"`
}

// Validate validates this create not found body
func (o *CreateNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("createNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

func (o *CreateNotFoundBody) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("createNotFound"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create not found body based on context it is used
func (o *CreateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CreateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
